name: Build Go Binary

on:
  push:
    branches:
      - '**'  # Change to your default branch if different
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'  # Specify the Go version you need

      # Step 3: Install Dependencies and Update go.sum
      - name: Install Go Dependencies
        run: go mod tidy  # This will ensure go.sum is updated

      # Step 4: Clean up old binary in the root directory
      - name: Clean up old binary
        run: |
          # Remove old binary if it exists in the root
          rm -f go_extract_code

      # Step 5: Build the Go binary and place it in the root
      - name: Build Go Binary
        run: |
          go build -o go_extract_code ./cli.go ./main.go  # Build the binary directly in the root directory

      # Step 6: Commit and push the binary back to the repository
      - name: Commit and Push Binary
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Check if the binary exists
          if [ -f go_extract_code ]; then
            # Add the binary and go.mod/go.sum to the Git index
            git add go_extract_code go.mod go.sum

            # Check if there are changes to commit
            if ! git diff --cached --quiet; then
              git commit -m "ci: Add latest built binary go_extract_code and update go.mod/go.sum [skip ci]"
              git push origin HEAD:main  # Change to your target branch if different
            else
              echo "No changes to commit."
            fi
          else
            echo "Binary not found, skipping commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use the default GITHUB_TOKEN provided by GitHub Actions